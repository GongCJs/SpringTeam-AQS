<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.spring.aqs.mapper.aqsAnswerMapper">
	<resultMap id="BaseResultMap"
		type="team.spring.aqs.entity.aqsAnswer">
		<id column="answer_id" jdbcType="VARCHAR" property="answerId" />
		<result column="user_account" jdbcType="VARCHAR"
			property="userAccount" />
		<result column="question_id" jdbcType="VARCHAR"
			property="questionId" />
		<result column="answer_sub_id" jdbcType="VARCHAR"
			property="answerSubId" />
		<result column="answer_create_time" jdbcType="TIMESTAMP"
			property="answerCreateTime" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="team.spring.aqs.entity.aqsAnswer">
		<result column="answer_content" jdbcType="LONGVARCHAR"
			property="answerContent" />
	</resultMap>
	<sql id="Base_Column_List">
		answer_id, user_account, question_id, answer_sub_id, answer_create_time
	</sql>
	<sql id="Blob_Column_List">
		answer_content
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from aqs_answer
		where answer_id = #{answerId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from aqs_answer
		where answer_id = #{answerId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert"
		parameterType="team.spring.aqs.entity.aqsAnswer">
		insert into aqs_answer (answer_id, user_account, question_id,
		answer_sub_id, answer_create_time, answer_content
		)
		values (#{answerId,jdbcType=VARCHAR}, #{userAccount,jdbcType=VARCHAR},
		#{questionId,jdbcType=VARCHAR},
		#{answerSubId,jdbcType=VARCHAR}, #{answerCreateTime,jdbcType=TIMESTAMP},
		#{answerContent,jdbcType=LONGVARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="team.spring.aqs.entity.aqsAnswer">
		insert into aqs_answer
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="answerId != null">
				answer_id,
			</if>
			<if test="userAccount != null">
				user_account,
			</if>
			<if test="questionId != null">
				question_id,
			</if>
			<if test="answerSubId != null">
				answer_sub_id,
			</if>
			<if test="answerCreateTime != null">
				answer_create_time,
			</if>
			<if test="answerContent != null">
				answer_content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="answerId != null">
				#{answerId,jdbcType=VARCHAR},
			</if>
			<if test="userAccount != null">
				#{userAccount,jdbcType=VARCHAR},
			</if>
			<if test="questionId != null">
				#{questionId,jdbcType=VARCHAR},
			</if>
			<if test="answerSubId != null">
				#{answerSubId,jdbcType=VARCHAR},
			</if>
			<if test="answerCreateTime != null">
				#{answerCreateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="answerContent != null">
				#{answerContent,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="team.spring.aqs.entity.aqsAnswer">
		update aqs_answer
		<set>
			<if test="userAccount != null">
				user_account = #{userAccount,jdbcType=VARCHAR},
			</if>
			<if test="questionId != null">
				question_id = #{questionId,jdbcType=VARCHAR},
			</if>
			<if test="answerSubId != null">
				answer_sub_id = #{answerSubId,jdbcType=VARCHAR},
			</if>
			<if test="answerCreateTime != null">
				answer_create_time = #{answerCreateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="answerContent != null">
				answer_content = #{answerContent,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where answer_id = #{answerId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs"
		parameterType="team.spring.aqs.entity.aqsAnswer">
		update aqs_answer
		set user_account = #{userAccount,jdbcType=VARCHAR},
		question_id = #{questionId,jdbcType=VARCHAR},
		answer_sub_id = #{answerSubId,jdbcType=VARCHAR},
		answer_create_time = #{answerCreateTime,jdbcType=TIMESTAMP},
		answer_content = #{answerContent,jdbcType=LONGVARCHAR}
		where answer_id = #{answerId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="team.spring.aqs.entity.aqsAnswer">
		update aqs_answer
		set user_account = #{userAccount,jdbcType=VARCHAR},
		question_id = #{questionId,jdbcType=VARCHAR},
		answer_sub_id = #{answerSubId,jdbcType=VARCHAR},
		answer_create_time = #{answerCreateTime,jdbcType=TIMESTAMP}
		where answer_id = #{answerId,jdbcType=VARCHAR}
	</update>
	
</mapper>